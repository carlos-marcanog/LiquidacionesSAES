{"name": "test_2_lote_prestacion", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <tests.test_liquidaciones.TestLiquidaciones object at 0x0000029CE6AE0210>\n\n    def test_2_lote_prestacion(self):\n        driver = self.driver\n        liquidaciones = Liquidaciones(driver)\n>       liquidaciones.altaLotePrestacion()\n\ntest_liquidaciones.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <src.clases.Liquidaciones.Liquidaciones object at 0x0000029CE906E890>\n\n    def altaLotePrestacion(self):\n        self.driver.switch_to.default_content()\n        self.driver.switch_to.frame(1)\n        time.sleep(2)\n        self.driver.find_element(By.XPATH, MN_LIQUIDACIONES).click()\n        print('Se hizo click en liquidaciones')\n        time.sleep(2)\n        self.driver.find_element(By.XPATH, MN_LIQUIDACIONES_COMPB).click()\n        print('Se hizo click en liquidaciones de comprobantes')\n        time.sleep(2)\n        self.driver.switch_to.default_content()\n        self.driver.switch_to.frame(2)\n        time.sleep(2)\n        self.driver.find_element(By.XPATH, PER_NUEVO_LOTE).click()\n        print('Se hizo click en nuevo lote')\n        time.sleep(2)\n        dropdown = self.driver.find_element(By.XPATH, DD_TIPO_LIQUIDACION)\n        dropdown.find_element(By.XPATH, \"//option[. = 'PRESTACION']\").click()\n        print('Se selecicona el tipo de liquidacion PRESTACION')\n        self.driver.find_element(By.XPATH, TXT_RAZON_SOCIAL).send_keys(\"ACLIBA I\")\n        time.sleep(2)\n        self.driver.find_element(By.XPATH, BTN_BUSCAR_RAZON_SOCIAL).click()\n        self.driver.find_element(By.XPATH, BTN_BUSCAR_RAZON_SOCIAL).click()\n        print('Se selecicona la razon social ACLIBA I')\n        self.driver.find_element(By.XPATH, FECHA_RECEPCION_LOTE).send_keys(FECHA)\n        print('Se ingresa la fecha de recepcion')\n        time.sleep(2)\n        self.driver.find_element(By.XPATH, BTN_OK_LOTE).click()\n        self.driver.find_element(By.XPATH, BTN_OK_LOTE).click()\n        print('Se presiona aceptar y se da de alta el lote')\n        time.sleep(5)\n        texto_inicial = self.driver.find_element(By.XPATH, LOTE_GENERADO).text\n        print('este es mi texto inicial: ' + texto_inicial)\n        texto_final = texto_inicial[:6]\n        print('este es mi texto final: ' + texto_final)\n>       assert texto_final == 'LOTE'\nE       AssertionError\n\n..\\src\\clases\\Liquidaciones.py:54: AssertionError"}, "attachments": [{"name": "stdout", "source": "30180197-1118-43dd-aa00-41d9e077a021-attachment.txt", "type": "text/plain"}], "start": 1699378133497, "stop": 1699378157104, "uuid": "2751c71b-7ed8-4738-9ead-3b41e712b03d", "historyId": "badbd731520db94933aa5983cbe65773", "testCaseId": "badbd731520db94933aa5983cbe65773", "fullName": "test_liquidaciones.TestLiquidaciones#test_2_lote_prestacion", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('test_setup')"}, {"name": "suite", "value": "test_liquidaciones"}, {"name": "subSuite", "value": "TestLiquidaciones"}, {"name": "host", "value": "LAR-PF3K6GME"}, {"name": "thread", "value": "28640-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_liquidaciones"}]}