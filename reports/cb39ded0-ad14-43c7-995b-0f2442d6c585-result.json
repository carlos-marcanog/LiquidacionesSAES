{"name": "test_2_lote_prestacion", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <tests.test_liquidaciones.TestLiquidaciones object at 0x00000153680AEE50>\n\n    def test_2_lote_prestacion(self):\n        driver = self.driver\n        liquidaciones = Liquidaciones(driver)\n>       liquidaciones.altaLotePrestacion()\n\ntest_liquidaciones.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <src.clases.Liquidaciones.Liquidaciones object at 0x00000153680BD910>\n\n    def altaLotePrestacion(self):\n        try:\n            self.driver.switch_to.default_content()\n            self.driver.switch_to.frame(1)\n            time.sleep(2)\n            self.driver.find_element(By.XPATH, MN_LIQUIDACIONES).click()\n            print('Se hizo click en liquidaciones')\n            time.sleep(2)\n            self.driver.find_element(By.XPATH, MN_LIQUIDACIONES_COMPB).click()\n            print('Se hizo click en liquidaciones de comprobantes')\n            time.sleep(2)\n            self.driver.switch_to.default_content()\n            self.driver.switch_to.frame(2)\n            time.sleep(2)\n            self.driver.find_element(By.XPATH, PER_NUEVO_LOTE).click()\n            print('Se hizo click en nuevo lote')\n            time.sleep(2)\n            dropdown = self.driver.find_element(By.XPATH, DD_TIPO_LIQUIDACION)\n            dropdown.find_element(By.XPATH, \"//option[. = 'PRESTACION']\").click()\n            print('Se selecicona el tipo de liquidacion PRESTACION')\n            self.driver.find_element(By.XPATH, TXT_RAZON_SOCIAL).send_keys(\"ACLIBA I\")\n            time.sleep(2)\n            self.driver.find_element(By.XPATH, BTN_BUSCAR_RAZON_SOCIAL).click()\n            self.driver.find_element(By.XPATH, BTN_BUSCAR_RAZON_SOCIAL).click()\n            print('Se selecicona la razon social ACLIBA I')\n            self.driver.find_element(By.XPATH, FECHA_RECEPCION_LOTE).send_keys(FECHA)\n            print('Se ingresa la fecha de recepcion')\n            time.sleep(2)\n            self.driver.find_element(By.XPATH, BTN_OK_LOTE).click()\n            self.driver.find_element(By.XPATH, BTN_OK_LOTE).click()\n            print('Se presiona aceptar y se da de alta el lote')\n            time.sleep(5)\n            texto_inicial = self.driver.find_element(By.XPATH, LOTE_GENERADO).text\n            print('este es mi texto inicial: ' + texto_inicial)\n            texto_final = texto_inicial[:6]\n            print('este es mi texto final: ' + texto_final)\n>           assert texto_final == 'LOTE'\nE           AssertionError\n\n..\\src\\clases\\Liquidaciones.py:56: AssertionError"}, "attachments": [{"name": "altaLotePrestacion_11/07/2023_14:36:06", "source": "bda8a76c-132b-44b2-b282-7c1ca30041fa-attachment.png", "type": "image/png"}, {"name": "stdout", "source": "b6c6e263-109f-40e1-a894-089e9566de3c-attachment.txt", "type": "text/plain"}], "start": 1699378543568, "stop": 1699378567291, "uuid": "848f68f4-6400-46cf-bcee-eae42c58eaa1", "historyId": "badbd731520db94933aa5983cbe65773", "testCaseId": "badbd731520db94933aa5983cbe65773", "fullName": "test_liquidaciones.TestLiquidaciones#test_2_lote_prestacion", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('test_setup')"}, {"name": "suite", "value": "test_liquidaciones"}, {"name": "subSuite", "value": "TestLiquidaciones"}, {"name": "host", "value": "LAR-PF3K6GME"}, {"name": "thread", "value": "30796-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_liquidaciones"}]}